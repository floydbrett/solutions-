/***************************************************

You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.

Topics:
Array, Two Pointers, Greedy

***************************************************/

class Solution {
public:
    int maxArea(vector<int>& height) {
        
        int water = 0;
        int i = 0, j = height.size()-1;

        //bounds start at farthest possible points and amount of water is calculated, because the width only gets shorter the amount of water will only rise when the height gets bigger
        while(i < j){

            int h = min(height[i], height[j]);
            water = max(water, (j-i)*h);

            //increment/decrement through i and j until height increases
            while(height[i] <= h && i < j) i++;
            while(height[j] <= h && i < j) j--;



        }
        return water;

    }
};
